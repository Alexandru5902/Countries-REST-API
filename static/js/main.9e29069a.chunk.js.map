{"version":3,"sources":["Navigation.js","Countries.js","Country.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","styled","nav","Navbarcontainer","div","Logo","a","Dark","Navigation","icon","faMoon","App","section","AppFlexing","Card","NameCountry","h2","CountryImage","CountryText","CountryDetails","FilteringFlex","InputDiv","Input","input","Countries","useState","countries","setCountries","loading","setLoading","setInput","url","useEffect","fetch","then","res","json","console","log","className","placeholder","onChange","e","target","value","filter","country","name","toLowerCase","includes","filtereditems","map","src","flag","population","region","capital","to","numericCode","CountryApp","Country","useParams","setCountry","response","FetchingCountry","subregion","topLevelDomain","exact","path","children","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e29069a.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMoon } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Navbar = styled.nav`\r\nbackground-color:hsl(209, 23%, 22%);\r\npadding:2rem 5rem;\r\n@media(max-width:600px){\r\npadding:2rem 2rem;\r\n}\r\n`\r\n\r\nconst Navbarcontainer = styled.div`\r\ndisplay:flex;\r\njustify-content:space-between;\r\nalign-items:center;\r\n`\r\n\r\nconst Logo = styled.a`\r\ncolor:#fff;\r\nfont-weight:650;\r\nfont-size:1.2rem;\r\n@media(max-width:600px){\r\nfont-size:0.9rem;\r\n}\r\n`\r\n\r\nconst Dark = styled.a`\r\ncolor:#fff;\r\nfont-weight:500;\r\nfont-size:.95rem;\r\ndisplay:flex;\r\ncursor:pointer;\r\nalign-items:center;\r\nspan{\r\npadding-left:.5rem;\r\n}\r\n@media(max-width:600px){\r\nfont-size:.75rem;\r\n}\r\n`\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <div>\r\n            <Navbar>\r\n                <Navbarcontainer>\r\n                     <Logo>\r\n                         Where in the world ?\r\n                     </Logo>\r\n                     <Dark>\r\n                        <FontAwesomeIcon icon={faMoon} /> <span>Dark Mode</span>\r\n                     </Dark>\r\n                </Navbarcontainer>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation\r\n","import React from 'react'\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport styled from 'styled-components'\r\nimport { BrowserRouter as Router , Route , Link } from 'react-router-dom';\r\n\r\nconst App = styled.section`\r\nbackground-color:hsl(207, 26%, 17%);\r\nmin-height:100vh;\r\nwidth:100%;\r\npadding:2.5rem 5rem;\r\n@media(max-width:600px){\r\npadding:2rem 2rem;\r\n}\r\n`\r\n\r\nconst AppFlexing = styled.div`\r\ndisplay:grid;\r\ngrid-template-columns:1fr 1fr 1fr 1fr;\r\ngrid-gap:80px;\r\n@media(max-width:600px){\r\ngrid-template-columns:1fr;\r\n}\r\n`\r\n\r\nconst Card = styled.div`\r\ndisplay:flex;\r\nflex-direction:column;\r\n`\r\n\r\nconst NameCountry = styled.h2`\r\ncolor:#fff;\r\nfont-size:1.25rem;\r\n`\r\n\r\nconst CountryImage = styled.div`\r\nmargin-top:1rem;\r\nimg{\r\nwidth:100%;\r\nheight:auto;\r\n}\r\n`\r\n\r\nconst CountryText = styled.div`\r\nbackground-color:hsl(209, 23%, 22%);\r\nmargin-top:-1rem;\r\npadding:2rem 2rem;\r\n`\r\n\r\nconst CountryDetails = styled.div`\r\nmargin-top:1.5rem;\r\nmargin-bottom:1.5rem;\r\nh5{\r\ncolor:#fff;\r\nfont-size:.9rem;\r\nfont-weight:450;\r\nletter-spacing:.2px;\r\nline-height:1.8;\r\nspan{\r\ncolor:hsl(0, 0%, 70%);\r\npadding-right:.5rem;\r\n}\r\n}\r\n`\r\n\r\nconst FilteringFlex = styled.div`\r\ndisplay:flex;\r\njustify-content:space-around;\r\nalign-items:center;\r\n`\r\n\r\nconst InputDiv = styled.div`\r\nwidth:30%;\r\n@media(max-width:600px){\r\nwidth:150%;\r\n}\r\n`\r\n\r\nconst Input = styled.input`\r\nwidth:100%;\r\nheight:auto;\r\nbackground-color:hsl(209, 23%, 22%);\r\nborder:none;\r\npadding:1rem 1.3rem;\r\nfont-weight:600;\r\ncolor:#fff;\r\nborder-radius:5px;\r\n`\r\n\r\nconst Countries = () => {\r\n    \r\n    const [countries,setCountries] = useState([]);\r\n\r\n    const [loading,setLoading] = useState(true);\r\n\r\n    const [input,setInput] = useState('');\r\n    \r\n    const url ='https://restcountries.eu/rest/v2/all';\r\n\r\n    function FetchingAPI(){\r\n        fetch(url)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            setCountries(json);\r\n            setLoading(false);\r\n            console.log(json);\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n     FetchingAPI();\r\n    },[url]);\r\n\r\n    function filtereditems(countries){\r\n        return countries.filter((country) => { return country.name.toLowerCase().includes(input)});\r\n    }\r\n\r\n    return (\r\n        <App>\r\n        <div className=\"FilteringInputs\">\r\n            <FilteringFlex>\r\n                <InputDiv>\r\n                  <Input placeholder=\"Search for a country\" onChange={((e) => setInput(e.target.value))} value={input} />\r\n                </InputDiv>\r\n            </FilteringFlex>\r\n        </div>\r\n          <AppFlexing> \r\n            {loading ? <h3>Loading....</h3>  : \r\n              filtereditems(countries).map((country) => (\r\n               <Card key={country.numericCode}>\r\n                    <CountryImage>\r\n                        <img src={country.flag} />\r\n                    </CountryImage>\r\n                    <CountryText>\r\n                        <NameCountry>\r\n                            {country.name}\r\n                        </NameCountry>\r\n                        <CountryDetails>\r\n                             <h5>Population: <span>{country.population}</span></h5>\r\n                             <h5>Region: <span>{country.region}</span></h5>\r\n                             <h5>Capital: <span>{country.capital}</span></h5>\r\n                        </CountryDetails>\r\n                        <Link to={`/countries/${country.name}`} className=\"link\">See more details</Link>\r\n                    </CountryText>\r\n               </Card>\r\n             ))}\r\n          </AppFlexing>\r\n        </App>\r\n    )\r\n}\r\n\r\nexport default Countries\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport { useParams , Link } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nconst CountryApp = styled.section`\r\nbackground-color:hsl(207, 26%, 17%);\r\nheight:90vh;\r\npadding:2.5rem 5.5rem;\r\ndisplay:flex;\r\nalign-items:center;\r\n@media(max-width:600px){\r\ndisplay:flex;\r\njustify-content:center;\r\npadding:0 1.2rem;\r\nheight:120vh;\r\n}\r\n`\r\n\r\nconst Country = () => {\r\n\r\n    const { name } = useParams();\r\n\r\n    const [country,setCountry] = useState([]);\r\n\r\n    useEffect(() => {\r\n     const FetchingCountry = async () =>{\r\n       const response = await fetch(`https://restcountries.eu/rest/v2/name/${name}`);\r\n       const country = await response.json();\r\n       setCountry(country);\r\n       console.log(country);\r\n     }\r\n     FetchingCountry();\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n            <CountryApp>\r\n                {country.map((country) => (\r\n                    <div key={country.numericCode} className=\"country-grid\">\r\n                        <div className=\"flag-img\">\r\n                            <img src={country.flag} />\r\n                        </div>\r\n                        <div className=\"flag-text\">\r\n                           <div className=\"flag1\">\r\n                             <h3>{country.name}</h3>\r\n                             <h6>Native Name: <span>{country.name}</span></h6>\r\n                             <h6>Population: <span>{country.population}</span></h6>\r\n                             <h6>Region: <span>{country.region}</span></h6>\r\n                             <h6>Sub Region: <span>{country.subregion}</span></h6>\r\n                             <h6>Capital: <span>{country.capital}</span></h6>\r\n                           </div>\r\n                           <div className=\"flag2\">\r\n                               <h5>Top Level Domain: <span>{country.topLevelDomain}</span></h5>\r\n                               <h5>Currencies: <span></span></h5>\r\n                               <h5>Languages: <span></span></h5>\r\n                           </div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </CountryApp>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Country\r\n","import './App.css';\nimport { BrowserRouter as Router , Route } from 'react-router-dom';\nimport Navigation from './Navigation';\nimport Countries from './Countries';\nimport Country from './Country';\n\nfunction App() {\n  return (\n    <>\n    <Router>\n      <Navigation />\n      <Route exact path=\"/\">\n        <Countries />    \n      </Route>\n      <Route exact path=\"/countries/:name\" children={<Country />}/>\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}